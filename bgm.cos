@IF	@IsDefined("__BUILD_ONE__") == 0
Include	"yosuga.ch"
@ENDIF

bgm[0] := Sound
bgm[1] := Sound

Function BgmCheckCallback()
	;Debug("BgmCheckCallback()")
	If (bgm[0].fEndingProcess == true)
		If ((bgm[0].res.IsPlaying() == true) && (bgm[0].res.IsPendingEnvelope() == false))
			bgm[0].res.Stop()
			bgm[0].res.Release()
			bgm[0].fEndingProcess := false
		EndIf
	EndIf
	If (bgm[1].fEndingProcess == true)
		If ((bgm[1].res.IsPlaying() == true) && (bgm[1].res.IsPendingEnvelope() == false))
			bgm[1].res.Stop()
			bgm[1].res.Release()
			bgm[1].fEndingProcess := false
		EndIf
	EndIf
EndFunc

Function BgmRelease()
	Debug("BgmRelease()")
	bgm[0].res.Stop()
	bgm[0].res.Release()
	bgm[1].res.Stop()
	bgm[1].res.Release()
EndFunc

Function PlayBgm(String file, Integer fNonFade)
	Debug("PlayBgm()")
	file.MakeUpper()
	If (IsPlayBgm() && (bgm[bgmIndex].filename == file))
		Return
	EndIf
	If (IsPlayBgm())
		StopBgm(fNonFade)
	Endif
	Debug("BGM-" + file)
	If (bgmIndex == 0)
		bgmIndex := 1
	Else
		bgmIndex := 0
	EndIf
	bgm[bgmIndex].filename := file
	SetBgmInfo(bgm[bgmIndex])
	bgm[bgmIndex].fPause := 0
	If (cnfObj.flgPlayBgm == true)
		bgm[bgmIndex].fPlaying := true
	Else
		bgm[bgmIndex].fPlaying := false
		Return
	EndIf
	bgm[bgmIndex].res.LoadSound(file + ".mio", true)
	If (fNonFade == false)
		bgm[bgmIndex].res.SetVolume(0.0, 0.0)
		bgm[bgmIndex].res.PlayFrom(0, bgm[bgmIndex].endPos, true, bgm[bgmIndex].rewindPos, ptfMusic)
		Bezier2D bzVol
		bzVol.SetLinear(0.0, 0.0, cnfObj.volBgm, cnfObj.volBgm)
		bgm[bgmIndex].res.SetVolumeEnvelope(bzVol, 2000)
	Else
		bgm[bgmIndex].res.SetVolume(cnfObj.volBgm, cnfObj.volBgm)
		bgm[bgmIndex].res.PlayFrom(0, bgm[bgmIndex].endPos, true, bgm[bgmIndex].rewindPos, ptfMusic)
	EndIf
EndFunc

Function StopBgm(Integer fNonFade, Integer fConfigStop)
	Debug("BGM-STOP")
	If (fNonFade == false)
		Bezier2D bzVol
		Real leftVol
		Real rightVol
		bgm[bgmIndex].res.GetVolume(leftVol, rightVol)
		bzVol.SetLinear(leftVol, rightVol, 0.0, 0.0)
		bgm[bgmIndex].res.SetVolumeEnvelope(bzVol, 3000)
		bgm[bgmIndex].fEndingProcess := true
	EndIf
	If (fNonFade != false)
		bgm[bgmIndex].res.Stop()
		bgm[bgmIndex].res.Release()
	EndIf
	bgm[bgmIndex].fPlaying := 0
	If (fConfigStop == false)
		bgm[bgmIndex].filename := ""
	EndIf
EndFunc

Function EnvSeCheckCallback()
	;Debug("EnvSeCheckCallback()")
	Integer i := 0
	While (i < envSe.GetLength())
		String str
		str := envSe.GetTagName(i)
		If (envSe[str].fEndingProcess == true)
			If ((envSe[str].res.IsPlaying() == true) && (envSe[str].res.IsPendingEnvelope() == 0))
				envSe[str].res.Stop()
				envSe[str].res.Release()
				envSe.Remove(str)
			EndIf
		EndIf
		i += 1
	EndWhile
EndFunc

Function EnvSeRelease()
	Debug("EnvSeRelease()")
	Integer i := 0
	While (i < envSe.GetLength())
		String str
		str := envSe.GetTagName(i)
		envSe[str].res.Stop()
		envSe[str].res.Release()
		i += 1
	EndWhile
	envSe.RemoveAll()
EndFunc

Function GetPlayBgmName()
	Debug("GetPlayBgmName()")
	Return bgm[bgmIndex].filename
EndFunc

Function GetPlayEnvSeList(Reference list)
	Debug("GetPlayEnvSeList()")
	Integer i := 0
	While (i < envSe.GetLength())
		Reference rEnv
		rEnv := envSe[envSe.GetTagName(i)]
		If (rEnv.fEndingProcess == 0)
			list[i] := envSe.GetTagName(i)
		EndIf
		i += 1
	EndWhile
EndFunc

Function GetVoicePlayingPosition(Reference total, Reference pos)
	Debug("GetVoicePlayingPosition()")
	SoundInfo info
	info := voice.GetInfo()
	total := info.nSampleCount
	Integer nowTime := GetCurrentTime()
	pos := (info.nSamplesPerSec * (nowTime - playVoiceTime)) / 1000.0
EndFunc

Function PauseBgm()
	Debug("PauseBgm()")
	bgm[bgmIndex].res.Pause()
	bgm[bgmIndex].fPause := true
EndFunc

Function PlayEnvSe(String file, Integer fFade)
	file.MakeUpper()
	Debug("EnvSe-" + file)
	If (envSe[file].GetType() == "Sound")
		envSe[file].res.Stop()
		envSe.Remove(file)
		envSe[file] := Sound
	Else
		envSe[file] := Sound
	EndIf
	If ((envSe[file].res.IsPlaying()) & (envSe[file].fEndingProcess == false))
		Return
	EndIf
	envSe[file].filename := file
	If (cnfObj.flgPlaySe == true)
		envSe[file].fPlaying := true
	Else
		envSe[file].fPlaying := false
		Return
	EndIf
	envSe[file].res.LoadSound(file + ".mio")
	If (fFade != false)
		envSe[file].res.SetVolume(0.0, 0.0)
		envSe[file].res.Play(0, ptfMusic)
		Bezier2D bzVol
		bzVol.SetLinear(0.0, 0.0,  cnfObj.volSe, cnfObj.volSe)
		envSe[file].res.SetVolumeEnvelope(bzVol, 2000)
	Else
		envSe[file].res.SetVolume(cnfObj.volSe, cnfObj.volSe)
		envSe[file].res.Play(0, ptfSE)
	EndIf
EndFunc

Function PlaySe(String file, Integer fWait)
	Debug("Se-" + file)
	If (cnfObj.flgPlaySe == false)
		Return
	EndIf
	se.LoadSound(file + ".mio")
	se.SetVolume(cnfObj.volSe, cnfObj.volSe)
	se.Play(-2, ptfSE)
	If (fWait == false)
	Else
		input.FlushJoyButtonPushed()
		While (se.IsPlaying())
			If ((input.GetJoyButtonPushed(4)) && (input.GetJoyButtonPushed(5)))
				Break
			EndIf
			Sleep(30)
		EndWhile
	EndIf
EndFunc

Function PlaySysSe(String file, Integer fWait)
	Debug("SysSe-" + file)
	If (cnfObj.flgPlaySysSe == false)
		Return
	EndIf
	sysSe.LoadSound(file + ".mio")
	sysSe.SetVolume(cnfObj.volSysSe, cnfObj.volSysSe)
	sysSe.Play(-2, ptfSE)
	If (fWait == false)
	Else
		input.FlushJoyButtonPushed()
		While (sysSe.IsPlaying())
			If ((input.GetJoyButtonPushed(4)) && (input.GetJoyButtonPushed(5)))
				Break
			EndIf
			Sleep(30)
		EndWhile
	EndIf
EndFunc

Function PlayVoice(String file, Integer fForce)
	Debug("PlayVoice()")
	Integer ret
	If ((cnfObj.flgPlayVoice == false) & (fForce == false))
		Return
	EndIf
	If (voice.LoadSound(file + ".mio") == 0)
		voice.SetVolume(cnfObj.volVoice, cnfObj.volVoice)
		playVoiceTime := GetCurrentTime()
		voice.Play(-2, ptfVoice)
		ret := true
	Else
		Debug("\\c;FF0000:NotFound-" + file + "\\c:")
		ret := false
	EndIf
	Return ret
EndFunc

Function RestartBgm()
	Debug("RestartBgm()")
	bgm[bgmIndex].res.Restart()
	bgm[bgmIndex].fPause := false
EndFunc

Function ScPauseBgm()
	Debug("ScPauseBgm()")
	If (IsLoad() == true)
		Return
	EndIf
	PauseBgm()
EndFunc

Function ScPlayBgm(String file, Integer fNonFade)
	Debug("ScPlayBgm()")
	If (IsLoad() == true)
		Return
	EndIf
	PlayBgm(file, fNonFade)
EndFunc

Function ScPlayEnvSe(String file, Integer fFade)
	Debug("ScPlayEnvSe()")
	If (IsLoad() == true)
		Return
	EndIf
	PlayEnvSe(file, fFade)
EndFunc

Function ScPlaySe(String file, Integer fWait)
	Debug("ScPlaySe()")
	If (IsLoad() == true)
		Return
	EndIf
	If ((fWait == false) &(adv.isSkip() == true))	;TODO
		fWait := false
	EndIf
	PlaySe(file, fWait)
EndFunc

Function SetSysSeVolume(Real vol)
	Debug("SetSysSeVolume()")
	cnfObj.volSysSe := vol
EndFunc

Function SetSeVolume(Real vol)
	Debug("SetSeVolume()")
	Integer i := 0
	While (i < envSe.GetLength())
		String str
		str := envSe.GetTagName(i)
		envSe[str].res.SetVolume(vol, vol)
		i += 1
	EndWhile
	cnfObj.volSe := vol
EndFunc

Function SetVoiceVolume(Real vol)
	Debug("SetVoiceVolume()")
	voice.SetVolume(vol, vol)
	cnfObj.volVoice := vol
EndFunc

Function SetBgmVolume(Real vol)
	Debug("SetBgmVolume()")
	bgm[0].res.SetVolume(vol, vol)
	bgm[1].res.SetVolume(vol, vol)
	cnfObj.volBgm := vol
EndFunc

Function ShowVoicePlayIndicator()
EndFunc

Function IsPauseBgm()
	Debug("IsPauseBgm()")
	Return bgm[bgmIndex].fPause
EndFunc

Function IsPlayBgm()
	Debug("IsPlayBgm()")
	Return bgm[bgmIndex].res.IsPlaying()	;TODO
EndFunc

Function IsPlayVoice()
	Debug("IsPlayVoice()")
	Return voice.res.IsPlaying()	;TODO
EndFunc

Function SetBgmInfo(Reference info)
	Debug("SetBgmInfo()")
	If (info.filename == "BGM01")
		info.endPos := true
		info.rewindPos := true
	ElseIf (info.filename == "BGM02")
		info.endPos := true
		info.rewindPos := true
	ElseIf (info.filename == "BGM02_S")
		info.endPos := true
		info.rewindPos := true
	ElseIf (info.filename == "BGM03")
		info.endPos := 3453154
		info.rewindPos := 235043
	ElseIf (info.filename == "BGM04")
		info.endPos := 6625443
		info.rewindPos := 403958
	ElseIf (info.filename == "BGM05")
		info.endPos := 4658801
		info.rewindPos := 524416
	ElseIf (info.filename == "BGM06")
		info.endPos := 5516339
		info.rewindPos := 243508
	ElseIf (info.filename == "BGM07")
		info.endPos := 4973038
		info.rewindPos := 161922
	ElseIf (info.filename == "BGM08")
		info.endPos := 6405448
		info.rewindPos := 179568
	ElseIf (info.filename == "BGM09")
		info.endPos := 4664696
		info.rewindPos := 399603
	ElseIf (info.filename == "BGM10")
		info.endPos := 7202878
		info.rewindPos := 734884
	ElseIf (info.filename == "BGM11")
		info.endPos := 3830880
		info.rewindPos := 1394331
	ElseIf (info.filename == "BGM12")
		info.endPos := 3888551
		info.rewindPos := 943395
	ElseIf (info.filename == "BGM13")
		info.endPos := 3915822
		info.rewindPos := 22837
	ElseIf (info.filename == "BGM14")
		info.endPos := 2955738
		info.rewindPos := 22821
	ElseIf (info.filename == "BGM15")
		info.endPos := 3487364
		info.rewindPos := 120386
	ElseIf (info.filename == "BGM16")
		info.endPos := 8693598
		info.rewindPos := 226400
	ElseIf (info.filename == "BGM17")
		info.endPos := 9330057
		info.rewindPos := 211613
	ElseIf (info.filename == "BGM18")
		info.endPos := 7477617
		info.rewindPos := 22772
	ElseIf (info.filename == "BGM19")
		info.endPos := 4934151
		info.rewindPos := 530871
	ElseIf (info.filename == "BGM20")
		info.endPos := 9068182
		info.rewindPos := 364347
	ElseIf (info.filename == "BGM21")
		info.endPos := 6787583
		info.rewindPos := 22075
	EndIf
	info.fEndingProcess := 0
EndFunc

Function StopEnvSe(String file, Integer fFade, Integer fConfigStop)
	Debug("StopEnvSe()")
	file.MakeUpper()
	If (file != "")
		If (envSe.IsEmpty(file) == true)
			Return
		EndIf
	Endif
	If (file == "")
		Array strRemove
		Debug("StopEnvSe-All")
		Integer i := 0
		While (i < envSe.GetLength())
			String str
			str := envSe.GetTagName(i)
			If (fFade != false)
				Bezier2D bzVol
				Real leftVol
				Real rightVol
				envSe[str].res.GetVolume(leftVol, rightVol)
				bzVol.SetLinear(leftVol, rightVol, 0.0, 0.0)
				envSe[str].res.SetVolumeEnvelope(bzVol, 3000)
				envSe[str].fEndingProcess:= true
			Else
				envSe[str].res.Stop()
				envSe[str].res.Release()
				If (fConfigStop == false)
					strRemove += str
				EndIf
			EndIf
			i += 1
		EndWhile
		i := 0
		While (i < strRemove.GetLength())
			envSe.Remove(strRemove[i])
			i += 1
		EndWhile
	Else
		Debug("StopEnvSe-" + file)
		If (fFade != false)
			Bezier2D bzVol
			Real leftVol
			Real rightVol
			envSe[file].res.GetVolume(leftVol,rightVol)
			bzVol.SetLinear(leftVol, rightVol, 0.0, 0.0)
			envSe[file].res.SetVolumeEnvelope(bzVol, 3000)
			envSe[file].fEndingProcess := true
		Else
			envSe[file].res.Stop()
			envSe[file].res.Release()
			If (fConfigStop == false)
				envSe.Remove(file)
			EndIf
		EndIf
	EndIf
EndFunc

Function StopSe()
	Debug("StopSe()")
	If (se.IsPlaying() == true)
		se.Stop()
		se.Release()
	EndIf
EndFunc

Function StopSysSe()
	Debug("StopSysSe()")
	If (sysSe.IsPlaying() == true)
		sysSe.Stop()
		sysSe.Release()
	EndIf
EndFunc

Function StopVoice()
	Debug("StopVoice()")
	If (voice.IsPlaying() == true)
		playVoiceTime := 0
		voice.Stop()
		voice.Release()
	EndIf
EndFunc

Function VoicePlayIndicatorProc()
	Debug("VoicePlayIndicatorProc()")
	If (IsDebug == true)
		Integer total
		Integer pos
		If (IsPlayVoice() == true)
			GetVoicePlayingPosition(total, pos)
			If (sprVoicePlayingBar.IsVisible() == false)
				sprVoicePlayingBar.SetVisible(true)
				sprVoicePlayingTrim.SetVisible(true)
			EndIf
			total += 10000
			sprVoicePlayingBar.MovePosition((DEBUG_VOICECHECK_X + 7) + 190.0 * ((0.0 := pos) / total),DEBUG_VOICECHECK_Y)
		ElseIf (sprVoicePlayingBar.IsVisible() == true)
			sprVoicePlayingBar.SetVisible(false)
			sprVoicePlayingTrim.SetVisible(false)
		EndIf
	EndIf
EndFunc

Function WaitVoice(Integer fKeyDisable)
	Debug("WaitVoice()")
	If (fKeyDisable != false)
		While (voice.IsPlaying())
		EndWhile
	Else
		input.FlushJoyButtonPushed()
		While (voice.IsPlaying())
			If ((input.GetJoyButtonPushed(4)) && (input.GetJoyButtonPushed(5)))
				Break
			EndIf
			Sleep(30)
		EndWhile
	EndIf
	StopVoice()
EndFunc

